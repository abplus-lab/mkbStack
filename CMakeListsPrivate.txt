# !!! WARNING !!! AUTO-GENERATED FILE, PLEASE DO NOT MODIFY IT AND USE
# https://docs.platformio.org/page/projectconf/section_env_build.html#build-flags
#
# If you need to override existing CMake configuration or add extra,
# please create `CMakeListsUser.txt` in the root of project.
# The `CMakeListsUser.txt` will not be overwritten by PlatformIO.



set(CMAKE_CONFIGURATION_TYPES "m5stack-core-esp32" CACHE STRING "Build Types reflect PlatformIO Environments" FORCE)


SET(CMAKE_C_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-gcc")
SET(CMAKE_CXX_COMPILER "$ENV{HOME}/.platformio/packages/toolchain-xtensa32/bin/xtensa-esp32-elf-g++")
SET(CMAKE_CXX_FLAGS "-Og -Wall -Werror=all -Wextra -Wno-error=deprecated-declarations -Wno-error=unused-but-set-variable -Wno-error=unused-function -Wno-error=unused-variable -Wno-frame-address -Wno-sign-compare -Wno-unused-parameter -fdata-sections -ffunction-sections -fno-exceptions -fno-rtti -fstrict-volatile-bitfields -ggdb -mlongcalls -nostdlib -std=gnu++11")
SET(CMAKE_C_FLAGS "-Og -Wall -Werror=all -Wextra -Wno-error=deprecated-declarations -Wno-error=unused-but-set-variable -Wno-error=unused-function -Wno-error=unused-variable -Wno-frame-address -Wno-old-style-declaration -Wno-sign-compare -Wno-unused-parameter -fdata-sections -ffunction-sections -fstrict-volatile-bitfields -ggdb -mlongcalls -nostdlib -std=gnu99")

SET(CMAKE_C_STANDARD 99)
set(CMAKE_CXX_STANDARD 11)

if (CMAKE_BUILD_TYPE MATCHES "m5stack-core-esp32")
    add_definitions(-D'_GNU_SOURCE')
    add_definitions(-D'IDF_VER=\"HEAD-HASH-NOTFOUND\"')
    add_definitions(-D'GCC_NOT_5_2_0')
    add_definitions(-D'ESP_PLATFORM')
    add_definitions(-D'PLATFORMIO=40304')
    add_definitions(-D'ARDUINO_M5Stack_Core_ESP32')

    include_directories("${CMAKE_CURRENT_LIST_DIR}/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_ringbuf/include")
    include_directories("${CMAKE_CURRENT_LIST_DIR}/.pio/build/m5stack-core-esp32/config")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/newlib/platform_include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/freertos/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/heap/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/log/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/soc/esp32/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/soc/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_rom/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_common/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/xtensa/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/xtensa/esp32/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp32/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/driver/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_event/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/tcpip_adapter/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/lwip/include/apps")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/lwip/include/apps/sntp")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/lwip/lwip/src/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/lwip/port/esp32/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/lwip/port/esp32/include/arch")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/vfs/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_wifi/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_wifi/esp32/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_eth/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/efuse/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/efuse/esp32/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/app_trace/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/mbedtls/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/mbedtls/mbedtls/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/wpa_supplicant/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/wpa_supplicant/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/wpa_supplicant/include/esp_supplicant")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/bootloader_support/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/app_update/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/spi_flash/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/nvs_flash/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/pthread/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/espcoredump/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/asio/asio/asio/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/asio/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/coap/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/coap/port/include/coap")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/coap/libcoap/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/coap/libcoap/include/coap2")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/console")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/nghttp/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/nghttp/nghttp2/lib/includes")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp-tls")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_adc_cal/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_gdbstub/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/tcp_transport/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_http_client/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_http_server/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_https_ota/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/protobuf-c/protobuf-c")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/protocomm/include/common")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/protocomm/include/security")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/protocomm/include/transports")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/mdns/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_local_ctrl/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/esp_websocket_client/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/expat/expat/expat/lib")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/expat/port/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/wear_levelling/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/sdmmc/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/fatfs/diskio")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/fatfs/vfs")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/fatfs/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/freemodbus/common/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/idf_test/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/jsmn/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/json/cJSON")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/libsodium/libsodium/src/libsodium/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/libsodium/port_include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/mqtt/esp-mqtt/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/openssl/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/spiffs/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/ulp/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/unity/include")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/unity/unity/src")
    include_directories("$ENV{HOME}/.platformio/packages/framework-espidf/components/wifi_provisioning/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/8.2.0")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include/c++/8.2.0/xtensa-esp32-elf")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/8.2.0/include")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/lib/gcc/xtensa-esp32-elf/8.2.0/include-fixed")
    include_directories("$ENV{HOME}/.platformio/packages/toolchain-xtensa32/xtensa-esp32-elf/include")
    include_directories("$ENV{HOME}/.platformio/packages/tool-unity")

    FILE(GLOB_RECURSE EXTRA_LIB_SOURCES
        ${CMAKE_CURRENT_LIST_DIR}/.pio/libdeps/m5stack-core-esp32/*.*
    )
endif()


FILE(GLOB_RECURSE SRC_LIST
    ${CMAKE_CURRENT_LIST_DIR}/src/*.*
    ${CMAKE_CURRENT_LIST_DIR}/lib/*.*
)

list(APPEND SRC_LIST ${EXTRA_LIB_SOURCES})
